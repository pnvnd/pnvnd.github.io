I"Î<h1 id="template-script">Template Script</h1>
<p>Configuring SQL Server repeatedly can take up a lot of time.  Hereâ€™s a script I use to configure SQL Server instances after installing.
<script src="https://gist.github.com/pnvnd/690146b33c353daafc51042aac3520bb.js"></script></p>

<h2 id="physical-memory">Physical Memory</h2>
<p>For my purposes, keeping RAM maxed out from the default installation slows down the server when things get busy, so here are my guidelines:</p>
<ul>
  <li>For servers with 20GB RAM or more: 8GB for Operating System, and the rest for SQL Server</li>
  <li>For servers between 16GB to 20GB: 4GB for Operating System, the rest of SQL Server</li>
  <li>Otherwise, for all other configurations, split memory between the operating system and SQL Server evenly.</li>
</ul>

<h2 id="cost-threshold-for-parallelism">Cost Threshold for Parallelism</h2>
<p>Set this value to 50 if unsure.  For .NET C# applications Iâ€™ve worked with 43 worked best.  Test by starting at 50 and go up/down by 3 to see what values gives the best performance.</p>

<h2 id="max-degree-parallelism">Max Degree Parallelism</h2>
<p>Set this number to be same as the number of logical processors on the system, but cap this at 8.</p>
:ET